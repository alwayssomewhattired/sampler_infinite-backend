
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String  @id @default(uuid())
  username String @unique
  email String @unique
  password  String  @unique
  photoId String
  created_at DateTime @default (now())

  // reviews Review[]
  comments Comment[]
  reactions CommentReaction[] 
  itemReactions ItemReaction[]
  items     Item[]  @relation("UserItems") 
}

model Item {
  id  String  @id 
  user String
  name String
  description String?
  created_at DateTime @default (now())

  User     User?   @relation("UserItems", fields: [user], references: [id])

  comments Comment[]
  reactions ItemReaction[]
}


model Comment {
  id          String @id @default(uuid())
  commentText String

  userID String?
  user   User?   @relation(fields: [userID], references: [id])

  itemID String
  item Item @relation(fields: [itemID], references: [id])

  created_at DateTime @default (now())

  reactions CommentReaction[]

  parentCommentId String?
  parentComment Comment? @relation("CommentReplies", fields: [parentCommentId], references: [id])

  childComments Comment[] @relation("CommentReplies")
}

model CommentReaction {
  userID String
  commentID String
  reactionType ReactionType

  user User @relation(fields: [userID], references: [id])
  comment Comment @relation(fields: [commentID], references: [id], onDelete: Cascade)

  @@id([userID, commentID]) // Composite primary key
}

model ItemReaction {
  userID String
  itemID String
  reactionType ReactionType

  user User @relation(fields: [userID], references: [id])
  item Item @relation(fields: [itemID], references: [id], onDelete: Cascade)

  @@id([userID, itemID]) // Composite primary key
}

enum ReactionType {
  like
  dislike
}